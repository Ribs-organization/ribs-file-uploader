class RibsFileUploader{constructor(e={}){document.querySelectorAll("[data-ribs-fileuploader]").forEach(e=>{this.initHtmlElements(e)}),this.uploadProgress=[],this.defineOptions(e),this.initEventListeners()}defineOptions(e){e.url||(e.url=""),e.deleteUrl||(e.deleteUrl=""),e.retrieveFilesUrl||(e.retrieveFilesUrl=""),this.options=e}getAcceptedFileTypes(e){return e.querySelector("input[type=file]").getAttribute("accept").split(",")}getFormattedAcceptedFileTypes(e){const t=this.getAcceptedFileTypes(e);let r="";for(const e of t)r+=""===r?`${e}`:`, ${e}`;return r}isFileTypeAccepted(e,t){const r=this.getAcceptedFileTypes(e),i=t.split("/")[0];return-1!==r.indexOf(`${i}/*`)||-1!==r.indexOf(t)}initHtmlElements(e){const t=document.createElement("div");t.id=`inner-${e.id}`,t.classList.add("ribs-fileuploader"),e.parentNode.insertBefore(t,e),t.appendChild(e);const r=document.createElement("label");r.textContent="Sélectionnez des fichiers",r.setAttribute("for",e.id),t.append(r);const i=document.createElement("div");i.classList.add("ribs-fileuploader-text"),i.textContent="Ou déposez les ici",t.append(i);const s=document.createElement("div");s.classList.add("progress"),s.max=100,s.value=0,t.append(s);const l=document.createElement("input");l.type="hidden",l.id=`${e.id}-file-number`,l.value=0,t.append(l);const n=document.createElement("div");s.append(n);const a=document.createElement("div");a.classList.add("ribs-fileuploader-gallery"),t.append(a)}initEventListeners(){this.initPreventDefaultsEvents(),this.initDragEnterEvents(),this.initDragOutEvents(),this.initDropEvents(),this.initInputFileOnchange(),this.initRetrieveFiles()}initPreventDefaultsEvents(){["dragenter","dragover","dragleave","drop"].forEach(e=>{document.body.addEventListener(e,e=>{e.preventDefault(),e.stopPropagation()},!1),document.querySelectorAll(".ribs-fileuploader").forEach(t=>{t.addEventListener(e,e=>{e.preventDefault(),e.stopPropagation()},!1)})})}initDragEnterEvents(){["dragenter","dragover"].forEach(e=>{document.querySelectorAll(".ribs-fileuploader").forEach(t=>{t.addEventListener(e,()=>{t.classList.add("is-dragover")},!1)})})}initDragOutEvents(){["dragleave","drop"].forEach(e=>{document.querySelectorAll(".ribs-fileuploader").forEach(t=>{t.addEventListener(e,()=>{t.classList.remove("is-dragover")},!1)})})}initDropEvents(){document.querySelectorAll(".ribs-fileuploader").forEach(e=>{e.addEventListener("drop",t=>{this.handleFilesUpload(t,e)},!1)})}initInputFileOnchange(){document.querySelectorAll(".ribs-fileuploader").forEach(e=>{e.querySelector("input[type=file]").addEventListener("change",t=>{this.handleFilesUpload(t,e,!0)},!1)})}showError(e){const t=document.createElement("div");t.classList.add("ribs-fileuploader-error"),console.log(this.getFormattedAcceptedFileTypes(e)),t.textContent=`Les extensions de fichier autorisées sont les suivantes : ${this.getFormattedAcceptedFileTypes(e)}`,e.prepend(t)}initRetrieveFiles(){document.querySelectorAll(".ribs-fileuploader").forEach(e=>{const t=this.retrieveParameter(e,"retrieveUrlParam"),r=this.retrieveUrl(this.options.retrieveFilesUrl,t);if(!r||""==r)return console.error(`Url to retrieve file can't be null for uploader id ${e.id}`),!1;const i=new XMLHttpRequest;i.open("POST",r,!0),i.setRequestHeader("Accept","application/json"),i.addEventListener("readystatechange",()=>{if(4==i.readyState&&200==i.status){const t=JSON.parse(i.response);if(t.files&&t.files.length>0){e.classList.add("has-files");for(const r of t.files){this.appendPreviewImageDiv(e,r.file_path,r.index),this.appendUploadElements(e,JSON.stringify(r),r.index);const t=e.querySelector('[id*="file-number"]');t.value=parseInt(t.value)+1}}}else 4==i.readyState&&200!=i.status&&console.log("error")}),i.send(this.buildFormData(t))})}handleFilesUpload(e,t,r=!1){let i;const s=e.dataTransfer;i=r?[...e.currentTarget.files]:[...s.files];for(let[e,r]of i.entries())this.isFileTypeAccepted(t,r.type)||i.splice(e,1);const l=t.querySelector('[id*="file-number"]');let n=0;0===parseInt(l.value)?l.value=parseInt(l.value)+i.length:(l.value=parseInt(l.value)+i.length,n=parseInt(l.value)-i.length),i.length>0?(t.classList.add("has-files"),this.initializeProgress(t,i.length),i.forEach((e,r)=>{this.uploadFile(e,n+r,r,t)}),i.forEach((e,r)=>{this.previewFile(e,t,n+r)})):this.showError(t)}initializeProgress(e,t){this.uploadProgress[e.id]=[];for(let r=t;r>0;r--)this.uploadProgress[e.id].push(0)}updateProgress(e,t,r){const i=e.querySelector(".progress").querySelector("div");this.uploadProgress[e.id][t]=r;let s=this.uploadProgress[e.id].reduce((e,t)=>e+t,0)/this.uploadProgress[e.id].length;i.style.width=`${s}%`,100===s&&i.classList.add("uploaded")}retrieveParameter(e,t){const r=e.querySelector("input[type=file]").dataset[t];if(r)try{return JSON.parse(r)}catch(e){return console.warn("Erreur in uploader JSON"),!1}return!1}retrieveUrl(e,t){return t&&t.url&&""!==t.url?t.url:e&&""!==e?e:null}buildFormData(e,t=null){const r=new FormData;for(const t in e)"url"!==t&&r.append(t,e[t]);return t&&r.append("file",t),r}uploadFile(e,t,r,i){const s=this.retrieveParameter(i,"urlParam"),l=this.retrieveUrl(this.options.url,s);if(!l||""==l)return console.error(`Url to upload file can't be null for uploader id ${i.id}`),!1;const n=new XMLHttpRequest;n.open("POST",l,!0),n.setRequestHeader("Accept","application/json"),n.upload.addEventListener("progress",e=>{this.updateProgress(i,r,100*e.loaded/e.total||100)}),n.addEventListener("readystatechange",()=>{4==n.readyState&&200==n.status?this.appendUploadElements(i,n.response,t):4==n.readyState&&200!=n.status&&console.log("error")}),n.send(this.buildFormData(s,e))}appendUploadElements(e,t,r){const i=e.querySelector("input[type=file").id,s=document.createElement("input");s.type="hidden",s.value=t,s.name=`${i}s[]`,s.id=`input-uploaded-file-${r}`,e.append(s);const l=e.querySelector(`#uploaded-file-${r}`);l.classList.add("uploaded"),l.querySelector("div").addEventListener("click",t=>this.deleteFile(t,e))}previewFile(e,t,r){let i=new FileReader;i.readAsDataURL(e),i.onloadend=(()=>{this.appendPreviewImageDiv(t,i.result,r)})}appendPreviewImageDiv(e,t,r){const i=document.createElement("img");i.src=t;const s=document.createElement("div");s.id=`uploaded-file-${r}`;const l=document.createElement("div");l.id=`uploaded-file-delete-${r}`,l.textContent="X",s.appendChild(l),s.appendChild(i),e.querySelector(".ribs-fileuploader-gallery").appendChild(s)}deleteFile(e,t){const r=this.retrieveParameter(t,"deleteUrlParam"),i=this.retrieveUrl(this.options.deleteUrl,r);if(!i||""==i)return console.error(`Url to delete file can't be null for uploader id ${t.id}`),!1;const s=e.currentTarget.parentNode,l=t.querySelector(`#input-${s.id}`),n=JSON.parse(l.value),a=new XMLHttpRequest;a.open("POST",i,!0),a.setRequestHeader("Accept","application/json"),a.addEventListener("readystatechange",()=>{if(4==a.readyState&&200==a.status){if(JSON.parse(a.response).success&&(s.remove(),l.remove(),0===t.querySelector(".ribs-fileuploader-gallery").childNodes.length)){t.classList.remove("has-files");const e=t.querySelector(".progress > div");e.classList.remove("uploaded"),e.style.width="0%"}}else 4==a.readyState&&200!=a.status&&console.log("error")});const o=this.buildFormData(r);o.append("file_path",n.file_path),o.append("file_name",n.new_filename?n.new_filename:n.filename),a.send(o)}}export default RibsFileUploader;